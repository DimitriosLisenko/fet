== fet - Functional Ear Trainer

v0.3.0

=== Global Options
=== --help
Show this message



=== --version
Display the program version



=== Commands
==== Command: <tt>generate </tt>
Generate MIDI files for ear training


===== Commands
====== Command: <tt>listening </tt>
Generate MIDI files for listening

Each MIDI file will contain a chord progression, followed by the specified number of degrees - first harmonically, then melodically after a pause.
======= Options
======= -d|--degrees arg

Number of degrees to play

[Default Value] 1
[Must Match] ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"]


======= -e|--exercises arg

Number of exercises to generate

[Default Value] 200


======= -t|--tempo arg

Tempo at which the chord progression is played at

[Default Value] 120


======= -a|--[no-]all-single-degree
Generate all single degree listening exercises (ignores -e and -d flag)



====== Command: <tt>singing </tt>
Generate MIDI files for singing

Each MIDI file will contain a chord progression, followed by a specified pause, during which the degree should be sung. The degree is then played for confirmation.
======= Options
======= -p|--pause arg

How many seconds to wait before playing the correct note

[Default Value] 3


======= -t|--tempo arg

Tempo at which the chord progression is played at

[Default Value] 120


====== Command: <tt>single_note_listening </tt>
Generate MIDI files for listening (single note)

Each MIDI file will contain a chord progression, followed the same note across all files.
======= Options
======= -t|--tempo arg

Tempo at which the chord progression is played at

[Default Value] 120


==== Command: <tt>help  command</tt>
Shows a list of commands or help for one command

Gets help for the application or its commands. Can also list the commands in a way helpful to creating a bash-style completion function
===== Options
===== -c
List commands one per line, to assist with shell completion



==== Command: <tt>play </tt>
Run the ear training application


===== Commands
====== Command: <tt>listening </tt>
Run the ear training application for listening

Each level will play a chord progression, followed by the specified number of degrees harmonically. The correct degrees should be selected.
======= Options
======= -d|--degrees arg

Number of degrees to play

[Default Value] 1
[Must Match] ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"]


======= -k|--key-type arg

Type of the chord progression

[Default Value] major
[Must Match] ["major", "minor"]


======= -l|--limit-degrees arg

Limit which degrees can play

[Default Value] []
[Must Match] ["1", "#1", "b2", "2", "#2", "b3", "3", "4", "#4", "b5", "5", "#5", "b6", "6", "#6", "b7", "7"]


======= -t|--tempo arg

Tempo at which the chord progression is played at

[Default Value] 120


======= -n|--[no-]next-on-correct
Automatically go to the next exercise when the answer was correct



==== Command: <tt>score </tt>
Score commands


===== Commands
====== Command: <tt>summary </tt>
Show the score summary


======= Options
======= -b|--begin-offset arg

Offset beginning index of resulting array

[Default Value] 0


======= -d|--degrees arg

Number of degrees to play

[Default Value] 1
[Must Match] ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"]


======= -e|--end-offset arg

Offset end index of resulting array

[Default Value] 0


======= -k|--key-type arg

Type of the chord progression

[Default Value] major
[Must Match] ["major", "minor"]


======= -s|--seconds arg

Only include games that had more playtime than the specified amount (seconds)

[Default Value] 0


